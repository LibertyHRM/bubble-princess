name: Build Staging Mode
on:
  push:
    tags:
      - "dev-*"

env:
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
  TELEGRAM_GROUP_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
  TELEGRAM_TOPIC_ID: 196
  # ================= NEW FLOW
  NO_FLIPPER: "1"
  LANG: en_US.UTF-8
  # ENVIRONMENT OF REPO
  REF_NAME: ${{ github.event.client_payload.ref_name }}
  TRIGGERING_ACTOR: ${{ github.event.client_payload.triggering_actor }}
  MAIN_REPOSITORY: ${{ secrets.CUCU_REPOSITORY }}
  # CHANGE BASE ON ENVIRONMENT
  API_KEY_JSON: ${{secrets.DEV_API_KEY_JSON}}
  FIREBASE_CLI_TOKEN: ${{secrets.DEV_FIREBASE_CLI_TOKEN}}
  ANDROID_FIREBASE_ID: ${{secrets.DEV_ANDROID_FIREBASE_ID}}

jobs:
  build_ipa:
    name: Build IOS
    runs-on: macos-14
    timeout-minutes: 60
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MAIN_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.client_payload.ref_name}}

      - name: Setup Node Version
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Select Xcode Version
        continue-on-error: true
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.3"

      - name: Install Node Modules
        run: yarn install --frozen-lockfile

      - name: Install Gems
        run: bundle install

      - name: Cache Pods
        id: cache-pods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ios/Podfile.lock
          key: cache-pods-${{ hashFiles('yarn.lock') }}

      - name: Pod install
        working-directory: ios
        run: pod install

      - name: Load Build Environments
        shell: bash
        run: bash scripts/load_build_environments.sh

      - name: Load secret file
        shell: bash
        run: bash scripts/load_secret_file.sh

      - name: Load Build Configurations
        shell: bash
        run: bash scripts/load_build_configure_stg.sh

      - name: Change Logo App
        shell: bash
        run: yarn appicon:create

      - name: Config App Version
        run: bundle exec fastlane ios change_app_version

      - name: Build IOS IPA
        run: bundle exec fastlane ios build_ipa_stg

      - name: Deploy ios
        if: ${{ success() }}
        shell: bash
        run: bundle exec fastlane ios deploy_ipa_stg

  build_android_apk:
    name: Build Android APK
    runs-on: ubuntu-22.04
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MAIN_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.client_payload.ref_name}}

      - name: Setup ruby 3.2.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Setup Node v18
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26c

      - name: Install Node Modules
        run: yarn install --frozen-lockfile

      - name: Install Gems
        run: bundle install

      - name: Load Build Environments
        shell: bash
        run: bash scripts/load_build_environments.sh

      - name: Load secret file
        shell: bash
        run: bash scripts/load_secret_file.sh

      - name: Load Build Configurations
        shell: bash
        run: bash scripts/load_build_configure_stg.sh

      - name: Change Logo App
        shell: bash
        run: yarn appicon:create

      - name: Change App Version
        run: bundle exec fastlane android change_app_version

      - name: Build Android APK
        run: bundle exec fastlane android build_apk_stg

      - name: Deploy Android APK
        if: ${{ success() }}
        run: bundle exec fastlane android deploy_apk_stg
